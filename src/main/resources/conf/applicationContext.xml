<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--spring配置文件-->

    <!--加载配置文件-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/>

    <!--声明数据源-->
    <bean id="MyDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
    </bean>
    <!--创建SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--        把连接池对象赋值给dataSource-->
        <property name="dataSource" ref="MyDataSource"/>
        <!--       configLocation属性是Resource类型 读取配置文件-->
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>

    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--得到包下的所有dao对象,放在spring容器中-->
        <property name="basePackage" value="com.day30.dao"/>
    </bean>
    <!--声明service注解的所在包位置-->
    <context:component-scan base-package="com.day30.service"/>

    <!--事务,注解配置-->


</beans>